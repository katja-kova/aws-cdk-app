{
  "Resources": {
    "ApiGatewayToLambdaPatternLambdaFunctionServiceRole0C123D8D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaFunctionServiceRole/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaFunctionServiceRoleDefaultPolicy253751F2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiGatewayToLambdaPatternLambdaFunctionServiceRoleDefaultPolicy253751F2",
        "Roles": [
          {
            "Ref": "ApiGatewayToLambdaPatternLambdaFunctionServiceRole0C123D8D"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0S3Bucket5EA66AEF"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0S3VersionKeyD171B821"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0S3VersionKeyD171B821"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaFunctionServiceRole0C123D8D",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs10.x",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "ApiGatewayToLambdaPatternLambdaFunctionServiceRoleDefaultPolicy253751F2",
        "ApiGatewayToLambdaPatternLambdaFunctionServiceRole0C123D8D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions."
            }
          ]
        }
      }
    },
    "ApiGatewayToLambdaPatternApiAccessLogGroup9383E9FC": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely"
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)"
            }
          ]
        }
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiC0598E46": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Name": "LambdaRestApi"
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiDeployment4109DB9389e39f0f13d332b34eef0b5a08d9da5a": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "ApiGatewayToLambdaPatternLambdaRestApiproxyANY321FD2C2",
        "ApiGatewayToLambdaPatternLambdaRestApiproxyF368A2D5",
        "ApiGatewayToLambdaPatternLambdaRestApiANY07ADEFED"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource"
            }
          ]
        }
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiDeploymentStageprodFDEB8074": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ApiGatewayToLambdaPatternApiAccessLogGroup9383E9FC",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"caller\":\"$context.identity.caller\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiDeployment4109DB9389e39f0f13d332b34eef0b5a08d9da5a"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "StageName": "prod",
        "TracingEnabled": true
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/DeploymentStage.prod/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiproxyF368A2D5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaRestApiC0598E46",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/{proxy+}/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiproxyANYApiPermissionAwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168ANYproxy58BE5201": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
              },
              "/",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiDeploymentStageprodFDEB8074"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/{proxy+}/ANY/ApiPermission.AwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168.ANY..{proxy+}"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiproxyANYApiPermissionTestAwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168ANYproxy06275EC2": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/{proxy+}/ANY/ApiPermission.Test.AwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168.ANY..{proxy+}"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiproxyANY321FD2C2": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiproxyF368A2D5"
        },
        "RestApiId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/{proxy+}/ANY/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiANYApiPermissionAwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168ANY49142A0B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
              },
              "/",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiDeploymentStageprodFDEB8074"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/ANY/ApiPermission.AwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168.ANY.."
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiANYApiPermissionTestAwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168ANY24495D7F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/ANY/ApiPermission.Test.AwsCdkAppStackApiGatewayToLambdaPatternLambdaRestApiABDDE168.ANY.."
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiANY07ADEFED": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaRestApiC0598E46",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
        },
        "AuthorizationType": "AWS_IAM",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApiGatewayToLambdaPatternLambdaFunction5DC51B7E",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/Default/ANY/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiUsagePlan837CF24C": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
            },
            "Stage": {
              "Ref": "ApiGatewayToLambdaPatternLambdaRestApiDeploymentStageprodFDEB8074"
            },
            "Throttle": {}
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApi/UsagePlan/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiCloudWatchRole3977FB08": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApiCloudWatchRole/Resource"
      }
    },
    "ApiGatewayToLambdaPatternLambdaRestApiAccountA31D1168": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayToLambdaPatternLambdaRestApiCloudWatchRole3977FB08",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
      ],
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/ApiGatewayToLambdaPattern/LambdaRestApiAccount"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.90.1,@aws-cdk/assets=1.89.0,@aws-cdk/aws-apigateway=1.91.0,@aws-cdk/aws-applicationautoscaling=1.89.0,@aws-cdk/aws-autoscaling-common=1.89.0,@aws-cdk/aws-certificatemanager=1.89.0,@aws-cdk/aws-cloudfront=1.89.0,@aws-cdk/aws-cloudfront-origins=1.89.0,@aws-cdk/aws-cloudwatch=1.89.0,@aws-cdk/aws-codeguruprofiler=1.89.0,@aws-cdk/aws-cognito=1.89.0,@aws-cdk/aws-dynamodb=1.89.0,@aws-cdk/aws-ec2=1.89.0,@aws-cdk/aws-ecr=1.89.0,@aws-cdk/aws-ecr-assets=1.89.0,@aws-cdk/aws-elasticsearch=1.89.0,@aws-cdk/aws-events=1.89.0,@aws-cdk/aws-glue=1.89.0,@aws-cdk/aws-iam=1.89.0,@aws-cdk/aws-kinesis=1.89.0,@aws-cdk/aws-kinesisanalytics=1.89.0,@aws-cdk/aws-kms=1.89.0,@aws-cdk/aws-lambda=1.89.0,@aws-cdk/aws-lambda-event-sources=1.89.0,@aws-cdk/aws-logs=1.89.0,@aws-cdk/aws-mediastore=1.89.0,@aws-cdk/aws-s3=1.89.0,@aws-cdk/aws-s3-assets=1.89.0,@aws-cdk/aws-s3-notifications=1.89.0,@aws-cdk/aws-sagemaker=1.89.0,@aws-cdk/aws-sam=1.89.0,@aws-cdk/aws-secretsmanager=1.89.0,@aws-cdk/aws-sns=1.89.0,@aws-cdk/aws-sns-subscriptions=1.89.0,@aws-cdk/aws-sqs=1.89.0,@aws-cdk/aws-ssm=1.89.0,@aws-cdk/aws-stepfunctions=1.89.0,@aws-cdk/cloud-assembly-schema=1.91.0,@aws-cdk/core=1.91.0,@aws-cdk/custom-resources=1.89.0,@aws-cdk/cx-api=1.91.0,@aws-cdk/region-info=1.91.0,@aws-solutions-constructs/aws-apigateway-lambda=1.89.0,@aws-solutions-constructs/core=1.89.0,jsii-runtime=node.js/v12.20.1"
      },
      "Metadata": {
        "aws:cdk:path": "AwsCdkAppStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "ApiGatewayToLambdaPatternLambdaRestApiEndpoint9A7AA3AD": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayToLambdaPatternLambdaRestApiC0598E46"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ApiGatewayToLambdaPatternLambdaRestApiDeploymentStageprodFDEB8074"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0S3Bucket5EA66AEF": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0\""
    },
    "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0S3VersionKeyD171B821": {
      "Type": "String",
      "Description": "S3 key for asset version \"1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0\""
    },
    "AssetParameters1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0ArtifactHash4A934180": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1ebc9d3ac2033816c4abb63e4afd69d350b4aba8704cc9236b82ea520b74f4b0\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}